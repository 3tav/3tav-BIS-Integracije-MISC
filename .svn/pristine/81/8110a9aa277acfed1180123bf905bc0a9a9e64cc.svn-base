//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ZZIEStoritveLib.ZZIEStoritveProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'UsingAddressing' from namespace 'http://www.w3.org/2006/05/addressing/wsdl' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EStoritveSoapBinding", Namespace="http://ws.estoritve.zzi.si")]
    public partial class EStoritveService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getELocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback transformPackOperationCompleted;
        
        private System.Threading.SendOrPostCallback eHrambaReceiveDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback isUserEDIEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentListUnacceptedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getELocationByELocationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback transformDocumentByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback isCompanyEDIEnabledExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback eHrambaGetDocumentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMyRolesByAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback versionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusByMsgIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback receiveDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback transformDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback eHrambaSetDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompanyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback echoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentTypeAndFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback findELocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback receiveDocumentCommitOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMyRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback isCompanyEDIEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback eHrambaGetAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPhysicalAddressOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EStoritveService() {
            this.Url = global::ZZIEStoritveLib.Properties.Settings.Default.ZZIEStoritveLib_ZZIEStoritveProxy_EStoritveService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getELocationCompletedEventHandler getELocationCompleted;
        
        /// <remarks/>
        public event transformPackCompletedEventHandler transformPackCompleted;
        
        /// <remarks/>
        public event eHrambaReceiveDocumentCompletedEventHandler eHrambaReceiveDocumentCompleted;
        
        /// <remarks/>
        public event sendDocumentCompletedEventHandler sendDocumentCompleted;
        
        /// <remarks/>
        public event changePasswordCompletedEventHandler changePasswordCompleted;
        
        /// <remarks/>
        public event isUserEDIEnabledCompletedEventHandler isUserEDIEnabledCompleted;
        
        /// <remarks/>
        public event getDocumentListUnacceptedCompletedEventHandler getDocumentListUnacceptedCompleted;
        
        /// <remarks/>
        public event getELocationByELocationIdCompletedEventHandler getELocationByELocationIdCompleted;
        
        /// <remarks/>
        public event transformDocumentByTypeCompletedEventHandler transformDocumentByTypeCompleted;
        
        /// <remarks/>
        public event isCompanyEDIEnabledExtCompletedEventHandler isCompanyEDIEnabledExtCompleted;
        
        /// <remarks/>
        public event eHrambaGetDocumentListCompletedEventHandler eHrambaGetDocumentListCompleted;
        
        /// <remarks/>
        public event getMyRolesByAppCompletedEventHandler getMyRolesByAppCompleted;
        
        /// <remarks/>
        public event versionCompletedEventHandler versionCompleted;
        
        /// <remarks/>
        public event getStatusByMsgIdCompletedEventHandler getStatusByMsgIdCompleted;
        
        /// <remarks/>
        public event receiveDocumentCompletedEventHandler receiveDocumentCompleted;
        
        /// <remarks/>
        public event transformDocumentCompletedEventHandler transformDocumentCompleted;
        
        /// <remarks/>
        public event eHrambaSetDocumentCompletedEventHandler eHrambaSetDocumentCompleted;
        
        /// <remarks/>
        public event getCompanyListCompletedEventHandler getCompanyListCompleted;
        
        /// <remarks/>
        public event echoCompletedEventHandler echoCompleted;
        
        /// <remarks/>
        public event getDocumentTypeAndFormatCompletedEventHandler getDocumentTypeAndFormatCompleted;
        
        /// <remarks/>
        public event getDocumentListCompletedEventHandler getDocumentListCompleted;
        
        /// <remarks/>
        public event findELocationsCompletedEventHandler findELocationsCompleted;
        
        /// <remarks/>
        public event receiveDocumentCommitCompletedEventHandler receiveDocumentCommitCompleted;
        
        /// <remarks/>
        public event getMyRolesCompletedEventHandler getMyRolesCompleted;
        
        /// <remarks/>
        public event isCompanyEDIEnabledCompletedEventHandler isCompanyEDIEnabledCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event eHrambaGetAccountsCompletedEventHandler eHrambaGetAccountsCompleted;
        
        /// <remarks/>
        public event getPhysicalAddressCompletedEventHandler getPhysicalAddressCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getELocation", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getELocationReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getELocation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string eLocationId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string taxIdFrom, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string dotName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string dofName) {
            object[] results = this.Invoke("getELocation", new object[] {
                        guid,
                        eLocationId,
                        taxIdFrom,
                        dotName,
                        dofName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getELocationAsync(string guid, string eLocationId, string taxIdFrom, string dotName, string dofName) {
            this.getELocationAsync(guid, eLocationId, taxIdFrom, dotName, dofName, null);
        }
        
        /// <remarks/>
        public void getELocationAsync(string guid, string eLocationId, string taxIdFrom, string dotName, string dofName, object userState) {
            if ((this.getELocationOperationCompleted == null)) {
                this.getELocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetELocationOperationCompleted);
            }
            this.InvokeAsync("getELocation", new object[] {
                        guid,
                        eLocationId,
                        taxIdFrom,
                        dotName,
                        dofName}, this.getELocationOperationCompleted, userState);
        }
        
        private void OngetELocationOperationCompleted(object arg) {
            if ((this.getELocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getELocationCompleted(this, new getELocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("transformPack", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("transformPackReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string transformPack([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string transformFrom, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string transformTo) {
            object[] results = this.Invoke("transformPack", new object[] {
                        guid,
                        transformFrom,
                        transformTo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void transformPackAsync(string guid, string transformFrom, string transformTo) {
            this.transformPackAsync(guid, transformFrom, transformTo, null);
        }
        
        /// <remarks/>
        public void transformPackAsync(string guid, string transformFrom, string transformTo, object userState) {
            if ((this.transformPackOperationCompleted == null)) {
                this.transformPackOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransformPackOperationCompleted);
            }
            this.InvokeAsync("transformPack", new object[] {
                        guid,
                        transformFrom,
                        transformTo}, this.transformPackOperationCompleted, userState);
        }
        
        private void OntransformPackOperationCompleted(object arg) {
            if ((this.transformPackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transformPackCompleted(this, new transformPackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("eHrambaReceiveDocument", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("eHrambaReceiveDocumentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string eHrambaReceiveDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] System.Nullable<int> docid) {
            object[] results = this.Invoke("eHrambaReceiveDocument", new object[] {
                        guid,
                        docid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void eHrambaReceiveDocumentAsync(string guid, System.Nullable<int> docid) {
            this.eHrambaReceiveDocumentAsync(guid, docid, null);
        }
        
        /// <remarks/>
        public void eHrambaReceiveDocumentAsync(string guid, System.Nullable<int> docid, object userState) {
            if ((this.eHrambaReceiveDocumentOperationCompleted == null)) {
                this.eHrambaReceiveDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OneHrambaReceiveDocumentOperationCompleted);
            }
            this.InvokeAsync("eHrambaReceiveDocument", new object[] {
                        guid,
                        docid}, this.eHrambaReceiveDocumentOperationCompleted, userState);
        }
        
        private void OneHrambaReceiveDocumentOperationCompleted(object arg) {
            if ((this.eHrambaReceiveDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eHrambaReceiveDocumentCompleted(this, new eHrambaReceiveDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("sendDocument", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sendDocumentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string sendDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool isArchived) {
            object[] results = this.Invoke("sendDocument", new object[] {
                        guid,
                        isArchived});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendDocumentAsync(string guid, bool isArchived) {
            this.sendDocumentAsync(guid, isArchived, null);
        }
        
        /// <remarks/>
        public void sendDocumentAsync(string guid, bool isArchived, object userState) {
            if ((this.sendDocumentOperationCompleted == null)) {
                this.sendDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDocumentOperationCompleted);
            }
            this.InvokeAsync("sendDocument", new object[] {
                        guid,
                        isArchived}, this.sendDocumentOperationCompleted, userState);
        }
        
        private void OnsendDocumentOperationCompleted(object arg) {
            if ((this.sendDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDocumentCompleted(this, new sendDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("changePassword", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("changePasswordReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string changePassword([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string oldPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string newPassword) {
            object[] results = this.Invoke("changePassword", new object[] {
                        guid,
                        oldPassword,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changePasswordAsync(string guid, string oldPassword, string newPassword) {
            this.changePasswordAsync(guid, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void changePasswordAsync(string guid, string oldPassword, string newPassword, object userState) {
            if ((this.changePasswordOperationCompleted == null)) {
                this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
            }
            this.InvokeAsync("changePassword", new object[] {
                        guid,
                        oldPassword,
                        newPassword}, this.changePasswordOperationCompleted, userState);
        }
        
        private void OnchangePasswordOperationCompleted(object arg) {
            if ((this.changePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordCompleted(this, new changePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("isUserEDIEnabled", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("isUserEDIEnabledReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> isUserEDIEnabled([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string TaxId) {
            object[] results = this.Invoke("isUserEDIEnabled", new object[] {
                        userName,
                        password,
                        TaxId});
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void isUserEDIEnabledAsync(string userName, string password, string TaxId) {
            this.isUserEDIEnabledAsync(userName, password, TaxId, null);
        }
        
        /// <remarks/>
        public void isUserEDIEnabledAsync(string userName, string password, string TaxId, object userState) {
            if ((this.isUserEDIEnabledOperationCompleted == null)) {
                this.isUserEDIEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisUserEDIEnabledOperationCompleted);
            }
            this.InvokeAsync("isUserEDIEnabled", new object[] {
                        userName,
                        password,
                        TaxId}, this.isUserEDIEnabledOperationCompleted, userState);
        }
        
        private void OnisUserEDIEnabledOperationCompleted(object arg) {
            if ((this.isUserEDIEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isUserEDIEnabledCompleted(this, new isUserEDIEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getDocumentListUnaccepted", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDocumentListUnacceptedReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getDocumentListUnaccepted([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string taxNumber, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string filterXML) {
            object[] results = this.Invoke("getDocumentListUnaccepted", new object[] {
                        guid,
                        taxNumber,
                        filterXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentListUnacceptedAsync(string guid, string taxNumber, string filterXML) {
            this.getDocumentListUnacceptedAsync(guid, taxNumber, filterXML, null);
        }
        
        /// <remarks/>
        public void getDocumentListUnacceptedAsync(string guid, string taxNumber, string filterXML, object userState) {
            if ((this.getDocumentListUnacceptedOperationCompleted == null)) {
                this.getDocumentListUnacceptedOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentListUnacceptedOperationCompleted);
            }
            this.InvokeAsync("getDocumentListUnaccepted", new object[] {
                        guid,
                        taxNumber,
                        filterXML}, this.getDocumentListUnacceptedOperationCompleted, userState);
        }
        
        private void OngetDocumentListUnacceptedOperationCompleted(object arg) {
            if ((this.getDocumentListUnacceptedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentListUnacceptedCompleted(this, new getDocumentListUnacceptedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getELocationByELocationId", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getELocationByELocationIdReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getELocationByELocationId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string eLocationId) {
            object[] results = this.Invoke("getELocationByELocationId", new object[] {
                        guid,
                        eLocationId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getELocationByELocationIdAsync(string guid, string eLocationId) {
            this.getELocationByELocationIdAsync(guid, eLocationId, null);
        }
        
        /// <remarks/>
        public void getELocationByELocationIdAsync(string guid, string eLocationId, object userState) {
            if ((this.getELocationByELocationIdOperationCompleted == null)) {
                this.getELocationByELocationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetELocationByELocationIdOperationCompleted);
            }
            this.InvokeAsync("getELocationByELocationId", new object[] {
                        guid,
                        eLocationId}, this.getELocationByELocationIdOperationCompleted, userState);
        }
        
        private void OngetELocationByELocationIdOperationCompleted(object arg) {
            if ((this.getELocationByELocationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getELocationByELocationIdCompleted(this, new getELocationByELocationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("transformDocumentByType", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("transformDocumentByTypeReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string transformDocumentByType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string eAddress, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string docB64Encoded, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string docType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string docFormatIn, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string docFormatOut) {
            object[] results = this.Invoke("transformDocumentByType", new object[] {
                        guid,
                        eAddress,
                        docB64Encoded,
                        docType,
                        docFormatIn,
                        docFormatOut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void transformDocumentByTypeAsync(string guid, string eAddress, string docB64Encoded, string docType, string docFormatIn, string docFormatOut) {
            this.transformDocumentByTypeAsync(guid, eAddress, docB64Encoded, docType, docFormatIn, docFormatOut, null);
        }
        
        /// <remarks/>
        public void transformDocumentByTypeAsync(string guid, string eAddress, string docB64Encoded, string docType, string docFormatIn, string docFormatOut, object userState) {
            if ((this.transformDocumentByTypeOperationCompleted == null)) {
                this.transformDocumentByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransformDocumentByTypeOperationCompleted);
            }
            this.InvokeAsync("transformDocumentByType", new object[] {
                        guid,
                        eAddress,
                        docB64Encoded,
                        docType,
                        docFormatIn,
                        docFormatOut}, this.transformDocumentByTypeOperationCompleted, userState);
        }
        
        private void OntransformDocumentByTypeOperationCompleted(object arg) {
            if ((this.transformDocumentByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transformDocumentByTypeCompleted(this, new transformDocumentByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("isCompanyEDIEnabledExt", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("isCompanyEDIEnabledExtReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string isCompanyEDIEnabledExt([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string taxIdFrom, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string dotName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string taxIdTo) {
            object[] results = this.Invoke("isCompanyEDIEnabledExt", new object[] {
                        guid,
                        taxIdFrom,
                        dotName,
                        taxIdTo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void isCompanyEDIEnabledExtAsync(string guid, string taxIdFrom, string dotName, string taxIdTo) {
            this.isCompanyEDIEnabledExtAsync(guid, taxIdFrom, dotName, taxIdTo, null);
        }
        
        /// <remarks/>
        public void isCompanyEDIEnabledExtAsync(string guid, string taxIdFrom, string dotName, string taxIdTo, object userState) {
            if ((this.isCompanyEDIEnabledExtOperationCompleted == null)) {
                this.isCompanyEDIEnabledExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisCompanyEDIEnabledExtOperationCompleted);
            }
            this.InvokeAsync("isCompanyEDIEnabledExt", new object[] {
                        guid,
                        taxIdFrom,
                        dotName,
                        taxIdTo}, this.isCompanyEDIEnabledExtOperationCompleted, userState);
        }
        
        private void OnisCompanyEDIEnabledExtOperationCompleted(object arg) {
            if ((this.isCompanyEDIEnabledExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isCompanyEDIEnabledExtCompleted(this, new isCompanyEDIEnabledExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("eHrambaGetDocumentList", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("eHrambaGetDocumentListReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string eHrambaGetDocumentList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string accountName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string filterXML) {
            object[] results = this.Invoke("eHrambaGetDocumentList", new object[] {
                        guid,
                        accountName,
                        filterXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void eHrambaGetDocumentListAsync(string guid, string accountName, string filterXML) {
            this.eHrambaGetDocumentListAsync(guid, accountName, filterXML, null);
        }
        
        /// <remarks/>
        public void eHrambaGetDocumentListAsync(string guid, string accountName, string filterXML, object userState) {
            if ((this.eHrambaGetDocumentListOperationCompleted == null)) {
                this.eHrambaGetDocumentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OneHrambaGetDocumentListOperationCompleted);
            }
            this.InvokeAsync("eHrambaGetDocumentList", new object[] {
                        guid,
                        accountName,
                        filterXML}, this.eHrambaGetDocumentListOperationCompleted, userState);
        }
        
        private void OneHrambaGetDocumentListOperationCompleted(object arg) {
            if ((this.eHrambaGetDocumentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eHrambaGetDocumentListCompleted(this, new eHrambaGetDocumentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getMyRolesByApp", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getMyRolesByAppReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getMyRolesByApp([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string applicationName) {
            object[] results = this.Invoke("getMyRolesByApp", new object[] {
                        guid,
                        applicationName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMyRolesByAppAsync(string guid, string applicationName) {
            this.getMyRolesByAppAsync(guid, applicationName, null);
        }
        
        /// <remarks/>
        public void getMyRolesByAppAsync(string guid, string applicationName, object userState) {
            if ((this.getMyRolesByAppOperationCompleted == null)) {
                this.getMyRolesByAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMyRolesByAppOperationCompleted);
            }
            this.InvokeAsync("getMyRolesByApp", new object[] {
                        guid,
                        applicationName}, this.getMyRolesByAppOperationCompleted, userState);
        }
        
        private void OngetMyRolesByAppOperationCompleted(object arg) {
            if ((this.getMyRolesByAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMyRolesByAppCompleted(this, new getMyRolesByAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("version", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("versionReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string version() {
            object[] results = this.Invoke("version", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void versionAsync() {
            this.versionAsync(null);
        }
        
        /// <remarks/>
        public void versionAsync(object userState) {
            if ((this.versionOperationCompleted == null)) {
                this.versionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnversionOperationCompleted);
            }
            this.InvokeAsync("version", new object[0], this.versionOperationCompleted, userState);
        }
        
        private void OnversionOperationCompleted(object arg) {
            if ((this.versionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.versionCompleted(this, new versionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getStatusByMsgId", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getStatusByMsgIdReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> getStatusByMsgId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] System.Nullable<int> msgId) {
            object[] results = this.Invoke("getStatusByMsgId", new object[] {
                        guid,
                        msgId});
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getStatusByMsgIdAsync(string guid, System.Nullable<int> msgId) {
            this.getStatusByMsgIdAsync(guid, msgId, null);
        }
        
        /// <remarks/>
        public void getStatusByMsgIdAsync(string guid, System.Nullable<int> msgId, object userState) {
            if ((this.getStatusByMsgIdOperationCompleted == null)) {
                this.getStatusByMsgIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusByMsgIdOperationCompleted);
            }
            this.InvokeAsync("getStatusByMsgId", new object[] {
                        guid,
                        msgId}, this.getStatusByMsgIdOperationCompleted, userState);
        }
        
        private void OngetStatusByMsgIdOperationCompleted(object arg) {
            if ((this.getStatusByMsgIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusByMsgIdCompleted(this, new getStatusByMsgIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("receiveDocument", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("receiveDocumentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string receiveDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] System.Nullable<int> docid) {
            object[] results = this.Invoke("receiveDocument", new object[] {
                        guid,
                        docid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void receiveDocumentAsync(string guid, System.Nullable<int> docid) {
            this.receiveDocumentAsync(guid, docid, null);
        }
        
        /// <remarks/>
        public void receiveDocumentAsync(string guid, System.Nullable<int> docid, object userState) {
            if ((this.receiveDocumentOperationCompleted == null)) {
                this.receiveDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreceiveDocumentOperationCompleted);
            }
            this.InvokeAsync("receiveDocument", new object[] {
                        guid,
                        docid}, this.receiveDocumentOperationCompleted, userState);
        }
        
        private void OnreceiveDocumentOperationCompleted(object arg) {
            if ((this.receiveDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.receiveDocumentCompleted(this, new receiveDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("transformDocument", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("transformDocumentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string transformDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string eAddress, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string docB64Encoded, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string docFormatOut) {
            object[] results = this.Invoke("transformDocument", new object[] {
                        guid,
                        eAddress,
                        docB64Encoded,
                        docFormatOut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void transformDocumentAsync(string guid, string eAddress, string docB64Encoded, string docFormatOut) {
            this.transformDocumentAsync(guid, eAddress, docB64Encoded, docFormatOut, null);
        }
        
        /// <remarks/>
        public void transformDocumentAsync(string guid, string eAddress, string docB64Encoded, string docFormatOut, object userState) {
            if ((this.transformDocumentOperationCompleted == null)) {
                this.transformDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransformDocumentOperationCompleted);
            }
            this.InvokeAsync("transformDocument", new object[] {
                        guid,
                        eAddress,
                        docB64Encoded,
                        docFormatOut}, this.transformDocumentOperationCompleted, userState);
        }
        
        private void OntransformDocumentOperationCompleted(object arg) {
            if ((this.transformDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transformDocumentCompleted(this, new transformDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("eHrambaSetDocument", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("eHrambaSetDocumentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string eHrambaSetDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string accountName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string archiveData) {
            object[] results = this.Invoke("eHrambaSetDocument", new object[] {
                        guid,
                        accountName,
                        archiveData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void eHrambaSetDocumentAsync(string guid, string accountName, string archiveData) {
            this.eHrambaSetDocumentAsync(guid, accountName, archiveData, null);
        }
        
        /// <remarks/>
        public void eHrambaSetDocumentAsync(string guid, string accountName, string archiveData, object userState) {
            if ((this.eHrambaSetDocumentOperationCompleted == null)) {
                this.eHrambaSetDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OneHrambaSetDocumentOperationCompleted);
            }
            this.InvokeAsync("eHrambaSetDocument", new object[] {
                        guid,
                        accountName,
                        archiveData}, this.eHrambaSetDocumentOperationCompleted, userState);
        }
        
        private void OneHrambaSetDocumentOperationCompleted(object arg) {
            if ((this.eHrambaSetDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eHrambaSetDocumentCompleted(this, new eHrambaSetDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getCompanyList", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getCompanyListReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getCompanyList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string filterAll) {
            object[] results = this.Invoke("getCompanyList", new object[] {
                        guid,
                        filterAll});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCompanyListAsync(string guid, string filterAll) {
            this.getCompanyListAsync(guid, filterAll, null);
        }
        
        /// <remarks/>
        public void getCompanyListAsync(string guid, string filterAll, object userState) {
            if ((this.getCompanyListOperationCompleted == null)) {
                this.getCompanyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompanyListOperationCompleted);
            }
            this.InvokeAsync("getCompanyList", new object[] {
                        guid,
                        filterAll}, this.getCompanyListOperationCompleted, userState);
        }
        
        private void OngetCompanyListOperationCompleted(object arg) {
            if ((this.getCompanyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompanyListCompleted(this, new getCompanyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("echo", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("echoReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string echo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string s) {
            object[] results = this.Invoke("echo", new object[] {
                        s});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void echoAsync(string s) {
            this.echoAsync(s, null);
        }
        
        /// <remarks/>
        public void echoAsync(string s, object userState) {
            if ((this.echoOperationCompleted == null)) {
                this.echoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnechoOperationCompleted);
            }
            this.InvokeAsync("echo", new object[] {
                        s}, this.echoOperationCompleted, userState);
        }
        
        private void OnechoOperationCompleted(object arg) {
            if ((this.echoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.echoCompleted(this, new echoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getDocumentTypeAndFormat", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDocumentTypeAndFormatReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getDocumentTypeAndFormat([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string docB64Encoded) {
            object[] results = this.Invoke("getDocumentTypeAndFormat", new object[] {
                        guid,
                        docB64Encoded});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentTypeAndFormatAsync(string guid, string docB64Encoded) {
            this.getDocumentTypeAndFormatAsync(guid, docB64Encoded, null);
        }
        
        /// <remarks/>
        public void getDocumentTypeAndFormatAsync(string guid, string docB64Encoded, object userState) {
            if ((this.getDocumentTypeAndFormatOperationCompleted == null)) {
                this.getDocumentTypeAndFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentTypeAndFormatOperationCompleted);
            }
            this.InvokeAsync("getDocumentTypeAndFormat", new object[] {
                        guid,
                        docB64Encoded}, this.getDocumentTypeAndFormatOperationCompleted, userState);
        }
        
        private void OngetDocumentTypeAndFormatOperationCompleted(object arg) {
            if ((this.getDocumentTypeAndFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentTypeAndFormatCompleted(this, new getDocumentTypeAndFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getDocumentList", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDocumentListReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getDocumentList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string taxNumber, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string filterXML) {
            object[] results = this.Invoke("getDocumentList", new object[] {
                        guid,
                        taxNumber,
                        filterXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentListAsync(string guid, string taxNumber, string filterXML) {
            this.getDocumentListAsync(guid, taxNumber, filterXML, null);
        }
        
        /// <remarks/>
        public void getDocumentListAsync(string guid, string taxNumber, string filterXML, object userState) {
            if ((this.getDocumentListOperationCompleted == null)) {
                this.getDocumentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentListOperationCompleted);
            }
            this.InvokeAsync("getDocumentList", new object[] {
                        guid,
                        taxNumber,
                        filterXML}, this.getDocumentListOperationCompleted, userState);
        }
        
        private void OngetDocumentListOperationCompleted(object arg) {
            if ((this.getDocumentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentListCompleted(this, new getDocumentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("findELocations", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("findELocationsReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string findELocations([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string filter) {
            object[] results = this.Invoke("findELocations", new object[] {
                        guid,
                        filter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void findELocationsAsync(string guid, string filter) {
            this.findELocationsAsync(guid, filter, null);
        }
        
        /// <remarks/>
        public void findELocationsAsync(string guid, string filter, object userState) {
            if ((this.findELocationsOperationCompleted == null)) {
                this.findELocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindELocationsOperationCompleted);
            }
            this.InvokeAsync("findELocations", new object[] {
                        guid,
                        filter}, this.findELocationsOperationCompleted, userState);
        }
        
        private void OnfindELocationsOperationCompleted(object arg) {
            if ((this.findELocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findELocationsCompleted(this, new findELocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("receiveDocumentCommit", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("receiveDocumentCommitReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string receiveDocumentCommit([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] System.Nullable<int> docid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool isArchived) {
            object[] results = this.Invoke("receiveDocumentCommit", new object[] {
                        guid,
                        docid,
                        isArchived});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void receiveDocumentCommitAsync(string guid, System.Nullable<int> docid, bool isArchived) {
            this.receiveDocumentCommitAsync(guid, docid, isArchived, null);
        }
        
        /// <remarks/>
        public void receiveDocumentCommitAsync(string guid, System.Nullable<int> docid, bool isArchived, object userState) {
            if ((this.receiveDocumentCommitOperationCompleted == null)) {
                this.receiveDocumentCommitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreceiveDocumentCommitOperationCompleted);
            }
            this.InvokeAsync("receiveDocumentCommit", new object[] {
                        guid,
                        docid,
                        isArchived}, this.receiveDocumentCommitOperationCompleted, userState);
        }
        
        private void OnreceiveDocumentCommitOperationCompleted(object arg) {
            if ((this.receiveDocumentCommitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.receiveDocumentCommitCompleted(this, new receiveDocumentCommitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getMyRoles", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getMyRolesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getMyRoles([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid) {
            object[] results = this.Invoke("getMyRoles", new object[] {
                        guid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMyRolesAsync(string guid) {
            this.getMyRolesAsync(guid, null);
        }
        
        /// <remarks/>
        public void getMyRolesAsync(string guid, object userState) {
            if ((this.getMyRolesOperationCompleted == null)) {
                this.getMyRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMyRolesOperationCompleted);
            }
            this.InvokeAsync("getMyRoles", new object[] {
                        guid}, this.getMyRolesOperationCompleted, userState);
        }
        
        private void OngetMyRolesOperationCompleted(object arg) {
            if ((this.getMyRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMyRolesCompleted(this, new getMyRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("isCompanyEDIEnabled", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("isCompanyEDIEnabledReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string isCompanyEDIEnabled([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string taxId) {
            object[] results = this.Invoke("isCompanyEDIEnabled", new object[] {
                        guid,
                        taxId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void isCompanyEDIEnabledAsync(string guid, string taxId) {
            this.isCompanyEDIEnabledAsync(guid, taxId, null);
        }
        
        /// <remarks/>
        public void isCompanyEDIEnabledAsync(string guid, string taxId, object userState) {
            if ((this.isCompanyEDIEnabledOperationCompleted == null)) {
                this.isCompanyEDIEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisCompanyEDIEnabledOperationCompleted);
            }
            this.InvokeAsync("isCompanyEDIEnabled", new object[] {
                        guid,
                        taxId}, this.isCompanyEDIEnabledOperationCompleted, userState);
        }
        
        private void OnisCompanyEDIEnabledOperationCompleted(object arg) {
            if ((this.isCompanyEDIEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isCompanyEDIEnabledCompleted(this, new isCompanyEDIEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("login", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("loginReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string login([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password) {
            object[] results = this.Invoke("login", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string userName, string password) {
            this.loginAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void loginAsync(string userName, string password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        userName,
                        password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("eHrambaGetAccounts", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("eHrambaGetAccountsReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string eHrambaGetAccounts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid) {
            object[] results = this.Invoke("eHrambaGetAccounts", new object[] {
                        guid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void eHrambaGetAccountsAsync(string guid) {
            this.eHrambaGetAccountsAsync(guid, null);
        }
        
        /// <remarks/>
        public void eHrambaGetAccountsAsync(string guid, object userState) {
            if ((this.eHrambaGetAccountsOperationCompleted == null)) {
                this.eHrambaGetAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OneHrambaGetAccountsOperationCompleted);
            }
            this.InvokeAsync("eHrambaGetAccounts", new object[] {
                        guid}, this.eHrambaGetAccountsOperationCompleted, userState);
        }
        
        private void OneHrambaGetAccountsOperationCompleted(object arg) {
            if ((this.eHrambaGetAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eHrambaGetAccountsCompleted(this, new eHrambaGetAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getPhysicalAddress", RequestNamespace="http://ws.estoritve.zzi.si", ResponseNamespace="http://ws.estoritve.zzi.si", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getPhysicalAddressReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getPhysicalAddress([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string eLocation) {
            object[] results = this.Invoke("getPhysicalAddress", new object[] {
                        guid,
                        eLocation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPhysicalAddressAsync(string guid, string eLocation) {
            this.getPhysicalAddressAsync(guid, eLocation, null);
        }
        
        /// <remarks/>
        public void getPhysicalAddressAsync(string guid, string eLocation, object userState) {
            if ((this.getPhysicalAddressOperationCompleted == null)) {
                this.getPhysicalAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPhysicalAddressOperationCompleted);
            }
            this.InvokeAsync("getPhysicalAddress", new object[] {
                        guid,
                        eLocation}, this.getPhysicalAddressOperationCompleted, userState);
        }
        
        private void OngetPhysicalAddressOperationCompleted(object arg) {
            if ((this.getPhysicalAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPhysicalAddressCompleted(this, new getPhysicalAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getELocationCompletedEventHandler(object sender, getELocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getELocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getELocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void transformPackCompletedEventHandler(object sender, transformPackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transformPackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transformPackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void eHrambaReceiveDocumentCompletedEventHandler(object sender, eHrambaReceiveDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class eHrambaReceiveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal eHrambaReceiveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sendDocumentCompletedEventHandler(object sender, sendDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void changePasswordCompletedEventHandler(object sender, changePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void isUserEDIEnabledCompletedEventHandler(object sender, isUserEDIEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isUserEDIEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isUserEDIEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getDocumentListUnacceptedCompletedEventHandler(object sender, getDocumentListUnacceptedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentListUnacceptedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentListUnacceptedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getELocationByELocationIdCompletedEventHandler(object sender, getELocationByELocationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getELocationByELocationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getELocationByELocationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void transformDocumentByTypeCompletedEventHandler(object sender, transformDocumentByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transformDocumentByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transformDocumentByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void isCompanyEDIEnabledExtCompletedEventHandler(object sender, isCompanyEDIEnabledExtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isCompanyEDIEnabledExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isCompanyEDIEnabledExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void eHrambaGetDocumentListCompletedEventHandler(object sender, eHrambaGetDocumentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class eHrambaGetDocumentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal eHrambaGetDocumentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getMyRolesByAppCompletedEventHandler(object sender, getMyRolesByAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMyRolesByAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMyRolesByAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void versionCompletedEventHandler(object sender, versionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class versionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal versionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getStatusByMsgIdCompletedEventHandler(object sender, getStatusByMsgIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusByMsgIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusByMsgIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void receiveDocumentCompletedEventHandler(object sender, receiveDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class receiveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal receiveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void transformDocumentCompletedEventHandler(object sender, transformDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transformDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transformDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void eHrambaSetDocumentCompletedEventHandler(object sender, eHrambaSetDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class eHrambaSetDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal eHrambaSetDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCompanyListCompletedEventHandler(object sender, getCompanyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompanyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompanyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void echoCompletedEventHandler(object sender, echoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class echoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal echoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getDocumentTypeAndFormatCompletedEventHandler(object sender, getDocumentTypeAndFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentTypeAndFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentTypeAndFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getDocumentListCompletedEventHandler(object sender, getDocumentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void findELocationsCompletedEventHandler(object sender, findELocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findELocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findELocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void receiveDocumentCommitCompletedEventHandler(object sender, receiveDocumentCommitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class receiveDocumentCommitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal receiveDocumentCommitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getMyRolesCompletedEventHandler(object sender, getMyRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMyRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMyRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void isCompanyEDIEnabledCompletedEventHandler(object sender, isCompanyEDIEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isCompanyEDIEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isCompanyEDIEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void eHrambaGetAccountsCompletedEventHandler(object sender, eHrambaGetAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class eHrambaGetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal eHrambaGetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPhysicalAddressCompletedEventHandler(object sender, getPhysicalAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPhysicalAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPhysicalAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591